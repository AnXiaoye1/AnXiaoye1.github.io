<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>IDEA Activation Code</title>
      <link href="/2020/04/12/idea-activation-code/"/>
      <url>/2020/04/12/idea-activation-code/</url>
      
        <content type="html"><![CDATA[<p>最近频繁出现IDEA不能用的情况（主要还是因为穷，不然我就支持正版了，==有钱还请支持正版==）</p><blockquote><p>我使用的是<code>win10系统</code>，安装的是<code>IDEA 2019.3.4</code>。</p></blockquote><p>下面直接上注册码，我发现在使用的时候，不管之前破解与否，直接添加注册码都行。不知道你们的情况是不是一样了。</p><hr><h2 id="code1"><a href="#code1" class="headerlink" title="code1"></a>code1</h2><blockquote><p>是一位山东大学的朋友贡献的注册码，可以使用到明年，非常感谢）</p></blockquote><pre class=" language-bash"><code class="language-bash">E70JHCOV2H-eyJsaWNlbnNlSWQiOiJFNzBKSENPVjJIIiwibGljZW5zZWVOYW1lIjoi5bGx5Lic55CG5bel5aSn5a2mIiwiYXNzaWduZWVOYW1lIjoiIiwiYXNzaWduZWVFbWFpbCI6IiIsImxpY2Vuc2VSZXN0cmljdGlvbiI6IkZvciBlZHVjYXRpb25hbCB1c2Ugb25seSIsImNoZWNrQ29uY3VycmVudFVzZSI6ZmFsc2UsInByb2R1Y3RzIjpbeyJjb2RlIjoiSUkiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgifSx7ImNvZGUiOiJBQyIsInBhaWRVcFRvIjoiMjAyMS0wMi0xOCJ9LHsiY29kZSI6IkRQTiIsInBhaWRVcFRvIjoiMjAyMS0wMi0xOCJ9LHsiY29kZSI6IlBTIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4In0seyJjb2RlIjoiR08iLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgifSx7ImNvZGUiOiJETSIsInBhaWRVcFRvIjoiMjAyMS0wMi0xOCJ9LHsiY29kZSI6IkNMIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4In0seyJjb2RlIjoiUlMwIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4In0seyJjb2RlIjoiUkMiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgifSx7ImNvZGUiOiJSRCIsInBhaWRVcFRvIjoiMjAyMS0wMi0xOCJ9LHsiY29kZSI6IlBDIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4In0seyJjb2RlIjoiUk0iLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgifSx7ImNvZGUiOiJXUyIsInBhaWRVcFRvIjoiMjAyMS0wMi0xOCJ9LHsiY29kZSI6IkRCIiwicGFpZFVwVG8iOiIyMDIxLTAyLTE4In0seyJjb2RlIjoiREMiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgifSx7ImNvZGUiOiJSU1UiLCJwYWlkVXBUbyI6IjIwMjEtMDItMTgifV0sImhhc2giOiIxNjc5MTgwMy8wIiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-qlgtO4xVGHX/r45fIKMaR6B9pWQtucrCYVsz0o00crcAiYN1k/kSMygggYl187B0u0jeXQCe4BmQIItKL79x6NwoPn43inreVhZ88f4+Cbl+V/KGeAYeybon+7YoTs8FY4+31ANW/LwBPxkPnlErxYdQ6oc/k6mnxIOm5Nf8WjKRfYYIl5Bhmdt1gHMGgFsocCcTLLiqDUGEcPj5tUIJXwwYaeKAR3YGXm/P73QpnYR/BcGaodBN3jprQRxsS5Ia5y06rrDAJcPSZuttAFpAit/4o/gq2XzhrjaBCtOMxNzk3XEAT82glTlWQOQx6KnRq6D7WUXzd81g44aP+Dca5Q<span class="token operator">==</span>-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow<span class="token operator">==</span></code></pre><h2 id="code2"><a href="#code2" class="headerlink" title="code2"></a>code2</h2><blockquote><p><a href="http://idea.ibyte.vip/2020/04/05/%E6%BF%80%E6%B4%BB%E7%A0%81/" target="_blank" rel="noopener">大佬：ibyte提供的最新注册码（点击可访问站点）</a></p></blockquote><pre class=" language-bash"><code class="language-bash">7PNLXJPODN-eyJsaWNlbnNlSWQiOiI3UE5MWEpQT0ROIiwibGljZW5zZWVOYW1lIjoi6aOe6LGhIOeggeWGnCIsImFzc2lnbmVlTmFtZSI6IiIsImFzc2lnbmVlRW1haWwiOiIiLCJsaWNlbnNlUmVzdHJpY3Rpb24iOiIiLCJjaGVja0NvbmN1cnJlbnRVc2UiOmZhbHNlLCJwcm9kdWN0cyI6W3siY29kZSI6IklJIiwiZmFsbGJhY2tEYXRlIjoiMjAyMC0wMS0xNSIsInBhaWRVcFRvIjoiMjAyMS0wMS0xNCJ9LHsiY29kZSI6IkFDIiwiZmFsbGJhY2tEYXRlIjoiMjAyMC0wMS0xNSIsInBhaWRVcFRvIjoiMjAyMS0wMS0xNCJ9LHsiY29kZSI6IkRQTiIsImZhbGxiYWNrRGF0ZSI6IjIwMjAtMDEtMTUiLCJwYWlkVXBUbyI6IjIwMjEtMDEtMTQifSx7ImNvZGUiOiJQUyIsImZhbGxiYWNrRGF0ZSI6IjIwMjAtMDEtMTUiLCJwYWlkVXBUbyI6IjIwMjEtMDEtMTQifSx7ImNvZGUiOiJHTyIsImZhbGxiYWNrRGF0ZSI6IjIwMjAtMDEtMTUiLCJwYWlkVXBUbyI6IjIwMjEtMDEtMTQifSx7ImNvZGUiOiJETSIsImZhbGxiYWNrRGF0ZSI6IjIwMjAtMDEtMTUiLCJwYWlkVXBUbyI6IjIwMjEtMDEtMTQifSx7ImNvZGUiOiJDTCIsImZhbGxiYWNrRGF0ZSI6IjIwMjAtMDEtMTUiLCJwYWlkVXBUbyI6IjIwMjEtMDEtMTQifSx7ImNvZGUiOiJSUzAiLCJmYWxsYmFja0RhdGUiOiIyMDIwLTAxLTE1IiwicGFpZFVwVG8iOiIyMDIxLTAxLTE0In0seyJjb2RlIjoiUkMiLCJmYWxsYmFja0RhdGUiOiIyMDIwLTAxLTE1IiwicGFpZFVwVG8iOiIyMDIxLTAxLTE0In0seyJjb2RlIjoiUkQiLCJmYWxsYmFja0RhdGUiOiIyMDIwLTAxLTE1IiwicGFpZFVwVG8iOiIyMDIxLTAxLTE0In0seyJjb2RlIjoiUEMiLCJmYWxsYmFja0RhdGUiOiIyMDIwLTAxLTE1IiwicGFpZFVwVG8iOiIyMDIxLTAxLTE0In0seyJjb2RlIjoiUk0iLCJmYWxsYmFja0RhdGUiOiIyMDIwLTAxLTE1IiwicGFpZFVwVG8iOiIyMDIxLTAxLTE0In0seyJjb2RlIjoiV1MiLCJmYWxsYmFja0RhdGUiOiIyMDIwLTAxLTE1IiwicGFpZFVwVG8iOiIyMDIxLTAxLTE0In0seyJjb2RlIjoiREIiLCJmYWxsYmFja0RhdGUiOiIyMDIwLTAxLTE1IiwicGFpZFVwVG8iOiIyMDIxLTAxLTE0In0seyJjb2RlIjoiREMiLCJmYWxsYmFja0RhdGUiOiIyMDIwLTAxLTE1IiwicGFpZFVwVG8iOiIyMDIxLTAxLTE0In0seyJjb2RlIjoiUlNVIiwiZmFsbGJhY2tEYXRlIjoiMjAyMC0wMS0xNSIsInBhaWRVcFRvIjoiMjAyMS0wMS0xNCJ9XSwiaGFzaCI6IjE2MjYyNDE0LzAiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0<span class="token operator">=</span>-PPKBrTimCndddUn6boFzGrhkBW8JU7D4lQuuOxKq4rdA4U3IQix9gM+8UYYUaJCQMg8zPmE42QPSkSWneE5VAShaAwhfdu5/D2KbG9jv2uoy8deXu4YWYRHRmn6TdU1/fBhOsbI4EbqYoRDjQ6R+ibYQBanurdcdySH8wDx2kiEBOEbbHJ9ekkGG4YZysbxWVdnFDX3+s+3IanmZKqK/Lih/+XGK5rwp1QGr3+fFX6yAuI5gK78BOajkkEAq6RR9lzvaMDGt7t5wpYxSnEzN9UgkIhdf1zpg/OG1CB4hRsrQU9IG39r2W2IxqHXdipGkPDag+4MTEkwMuofgXFF9NQ<span class="token operator">==</span>-MIIElTCCAn2gAwIBAgIBCTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTE4MTEwMTEyMjk0NloXDTIwMTEwMjEyMjk0NlowaDELMAkGA1UEBhMCQ1oxDjAMBgNVBAgMBU51c2xlMQ8wDQYDVQQHDAZQcmFndWUxGTAXBgNVBAoMEEpldEJyYWlucyBzLnIuby4xHTAbBgNVBAMMFHByb2QzeS1mcm9tLTIwMTgxMTAxMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxcQkq+zdxlR2mmRYBPzGbUNdMN6OaXiXzxIWtMEkrJMO/5oUfQJbLLuMSMK0QHFmaI37WShyxZcfRCidwXjot4zmNBKnlyHodDij/78TmVqFl8nOeD5+07B8VEaIu7c3E1N+e1doC6wht4I4+IEmtsPAdoaj5WCQVQbrI8KeT8M9VcBIWX7fD0fhexfg3ZRt0xqwMcXGNp3DdJHiO0rCdU+Itv7EmtnSVq9jBG1usMSFvMowR25mju2JcPFp1+I4ZI+FqgR8gyG8oiNDyNEoAbsR3lOpI7grUYSvkB/xVy/VoklPCK2h0f0GJxFjnye8NT1PAywoyl7RmiAVRE/EKwIDAQABo4GZMIGWMAkGA1UdEwQCMAAwHQYDVR0OBBYEFGEpG9oZGcfLMGNBkY7SgHiMGgTcMEgGA1UdIwRBMD+AFKOetkhnQhI2Qb1t4Lm0oFKLl/GzoRykGjAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBggkA0myxg7KDeeEwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0PBAQDAgWgMA0GCSqGSIb3DQEBCwUAA4ICAQAF8uc+YJOHHwOFcPzmbjcxNDuGoOUIP+2h1R75Lecswb7ru2LWWSUMtXVKQzChLNPn/72W0k+oI056tgiwuG7M49LXp4zQVlQnFmWU1wwGvVhq5R63Rpjx1zjGUhcXgayu7+9zMUW596Lbomsg8qVve6euqsrFicYkIIuUu4zYPndJwfe0YkS5nY72SHnNdbPhEnN8wcB2Kz+OIG0lih3yz5EqFhld03bGp222ZQCIghCTVL6QBNadGsiN/lWLl4JdR3lJkZzlpFdiHijoVRdWeSWqM4y0t23c92HXKrgppoSV18XMxrWVdoSM3nuMHwxGhFyde05OdDtLpCv+jlWf5REAHHA201pAU6bJSZINyHDUTB+Beo28rRXSwSh3OUIvYwKNVeoBY+KwOJ7WnuTCUq1meE6GkKc4D/cXmgpOyW/1SmBz3XjVIi/zprZ0zf3qH5mkphtg6ksjKgKjmx1cXfZAAX6wcDBNaCL+Ortep1Dh8xDUbqbBVNBL4jbiL3i3xsfNiyJgaZ5sX7i8tmStEpLbPwvHcByuf59qJhV/bZOl8KqJBETCDJcY6O2aqhTUy+9x93ThKs1GKrRPePrWPluud7ttlgtRveit/pcBrnQcXOl1rHq7ByB8CFAxNotRUYL9IF5n3wJOgkPojMy6jetQA5Ogc8Sm7RG6vg1yow<span class="token operator">==</span></code></pre><hr><blockquote><p>非常感谢大佬们的贡献，最后说明一下，该注册码仅供学习IDEA使用，不可商用，若有违背，后果自负。（有条件还请支持正版）</p></blockquote><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java-数组</title>
      <link href="/2020/03/02/java-shu-zu/"/>
      <url>/2020/03/02/java-shu-zu/</url>
      
        <content type="html"><![CDATA[<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><blockquote><p>数组：是一种容器，可同时放多个数据</p></blockquote><p><strong>特点</strong></p><p> 1.数组是一种引用类型数据</p><p> 2.数组可放多个数据，但类型必须相同</p><p> 3.数组的长度（大小）在程序运行期间不可改变</p><h2 id="1-数组的初始化"><a href="#1-数组的初始化" class="headerlink" title="1.数组的初始化"></a>1.数组的初始化</h2><blockquote><p>数组的初始化，在内存中创建一个数组，并赋给一些默认值</p></blockquote><p>1.动态初始化（指定长度）：</p><ul><li>格式：数组类型[] 数组名称 = new 数组类型[数组长度];</li></ul><p>2.静态初始化（指定内容）：</p><ul><li>格式1：数组类型[] 数组名称 = new 数组类型[] {元素1，元素2，…};</li><li>格式2：数组类型[] 数组名称 = {元素1，元素2，…};</li></ul><p><strong>【注意】：</strong></p><ul><li>静态/动态标准初始化格式可以拆分为2个步骤</li><li>而静态省略型格式不能拆分</li><li>如果不确定数组中的内容，用动态初始化，确定数组内容则用静态初始化</li></ul><blockquote><p><strong>数组使用：</strong></p></blockquote><ul><li>直接打印数组名称，输出的是数组在内存中的地址哈希值</li><li>使用动态初始化数组时，元素会有一个默认值：</li><li>整数类型，默认为 0</li><li>浮点类型，默认为 0.0</li><li>字符类型，默认为 ‘\u0000’</li><li>布尔类型，默认为 false</li><li>引用类型，默认为 null</li></ul><h2 id="2-数组内存分布状态"><a href="#2-数组内存分布状态" class="headerlink" title="2.数组内存分布状态"></a>2.数组内存分布状态</h2><p>一个数组的内存图如下：</p><p><img src="https://s2.ax1x.com/2020/03/02/3RvAyQ.png" alt="一个数组内存图-array1.png"></p><p> 两个数组的内存图如下：</p><p><img src="https://s2.ax1x.com/2020/03/02/3RvELj.png" alt="两个数组的内存图-array2.png"></p><p>两个引用指向同一个数组时：</p><p><img src="https://s2.ax1x.com/2020/03/02/3RvZes.png" alt="两个引用指向同一个数组-array3.png"></p><h2 id="3-数组的遍历及使用"><a href="#3-数组的遍历及使用" class="headerlink" title="3.数组的遍历及使用"></a>3.数组的遍历及使用</h2><blockquote><p>对数组的所有元素的挨个处理，默认操作就是挨个打印输出</p></blockquote><p>==快捷方式：==  <code>数组名称.fori</code></p><blockquote><p>数组作为方法的参数</p></blockquote><ul><li>当调用方法时，向方法的小括号传参，传的是==数组的地址值==</li></ul><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 打印一个数组 * @param array */</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printArray</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre><blockquote><p>数组作为方法的返回值，返回的是==数组的地址值==</p></blockquote><pre class=" language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** * 要求传回 总和sum、平均值avg，把他们放在数组中（数组做返回值，返回的是数组的地址值） * @param a * @param b * @param c * @return box 数组做返回值 */</span><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">box</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">,</span> <span class="token keyword">int</span> c<span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">int</span> sum <span class="token operator">=</span> a <span class="token operator">+</span> b <span class="token operator">+</span> c<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//总和</span>    <span class="token keyword">int</span> avg <span class="token operator">=</span> sum <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//平均值</span>    <span class="token comment" spellcheck="true">//返回这两个数，用数组</span>    <span class="token comment" spellcheck="true">/*int[] box = new int[2];    box[0] = sum;//总和    box[1] = avg;//平均值*/</span>    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> box <span class="token operator">=</span> <span class="token punctuation">{</span>sum<span class="token punctuation">,</span> avg<span class="token punctuation">}</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> <span class="token string">"box方法内部的数组是："</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span> box <span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//地址值</span>    <span class="token keyword">return</span> box<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>数组元素反转：</p><p>分析如下图：</p><p><img src="https://s2.ax1x.com/2020/03/02/3RvkQg.png" alt="分析图-array4.png"></p><h2 id="4-数组的注意事项"><a href="#4-数组的注意事项" class="headerlink" title="4.数组的注意事项"></a>4.数组的注意事项</h2><ul><li>索引越界：当数组访问不存在的索引号时，出现越界异常</li><li>数组必须进行new初始化才能使用其中的元素，仅仅赋值null，会发生空指针异常</li><li>数组一旦在运行期间，长度不可改变，理解如下图：</li></ul><p><img src="https://s2.ax1x.com/2020/03/02/3RvFSS.png" alt="两个引用指向同一个数组-array5.png"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo评论插件Gitalk</title>
      <link href="/2020/02/19/hexo-ping-lun-cha-jian-gitalk/"/>
      <url>/2020/02/19/hexo-ping-lun-cha-jian-gitalk/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>写了博客，不仅仅是自己看，当然是需要有更多的人看啊，而作者和读者之间的交流桥梁就是==评论==；因此，为博客添加评论插件是非常必要的，下面来看看怎么添加评论插件吧。</p><p>在此之前，体验过来必力评论系统，但由于那是韩国的插件，每次加载起来是真的慢，移动端评论也不友好，所以这次选的是Gitalk评论插件（所用主题:<code>Matery</code>）。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><blockquote><p>npm安装</p></blockquote><p>在<code>Hexo</code>根目录下使用<code>git Bash</code></p><pre class=" language-bash"><code class="language-bash"><span class="token function">npm</span> i --save gitalk</code></pre><p>完成后</p><pre class=" language-bash"><code class="language-bash"><span class="token function">import</span> <span class="token string">'gitalk/dist/gitalk.css'</span><span class="token function">import</span> Gitalk from <span class="token string">'gitalk'</span></code></pre><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="新建一个仓库"><a href="#新建一个仓库" class="headerlink" title="新建一个仓库"></a>新建一个仓库</h3><p>在<code>GitHub</code>上新建一个仓库，这个操作简单，就不一一讲解了。</p><p>建好仓库后，需要创建OAuth Application。</p><h3 id="创建OAuth-Application"><a href="#创建OAuth-Application" class="headerlink" title="创建OAuth Application"></a>创建OAuth Application</h3><p>Gitalk 需要一个<code>Github Application</code>，<a href="https://github.com/settings/applications/new" target="_blank" rel="noopener">点击申请</a>。当然，也可以在用户头像下的<code>setting</code>下的<code>Developer settings</code>中new一个Application，然后填写相应的参数。如下图所示：</p><p><img src="https://s2.ax1x.com/2020/02/19/3E9z6A.png" alt="3E9z6A.png"></p><p>完成后会生成<code>Client ID</code>和<code>Client Secret</code>。如下图：</p><p><a href="https://imgchr.com/i/3ECs9e" target="_blank" rel="noopener"><img src="https://s2.ax1x.com/2020/02/19/3ECs9e.png" alt="3ECs9e.png"></a></p><h3 id="集成Gitalk"><a href="#集成Gitalk" class="headerlink" title="集成Gitalk"></a>集成Gitalk</h3><p>我使用的博客主题: <a href="https://github.com/blinkfox/hexo-theme-matery/" target="_blank" rel="noopener">Matery</a> 已经集成了<code>Gitalk</code>，（<a href="https://www.anxiaoye.xyz/" target="_blank" rel="noopener">博客预览</a>）现在可以直接在<code>themes\hexo-theme-matery\_config.yml</code>文件种找到<code>Gitalk</code>进行配置。</p><pre class=" language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># Gitalk 评论模块的配置，默认为不激活</span>gitalk:  enable: <span class="token boolean">true</span> <span class="token comment" spellcheck="true">#用来做启用判断可以不用</span>  owner: <span class="token comment" spellcheck="true">#Github 用户名</span>  repo: <span class="token comment" spellcheck="true">#储存评论issue的github仓库名：gitalk</span>  oauth:    clientId: <span class="token comment" spellcheck="true">#`Github Application clientID`</span>    clientSecret: <span class="token comment" spellcheck="true">#`Github Application clientSecret`</span>  admin: <span class="token comment" spellcheck="true"># Github 用户名</span></code></pre><p>如果不是这个主题，方法也一样，先要配置<code>Gitalk</code>.<br>在<code>主题名\layout\_partial</code>文件下找到<code>gitalk.ejs</code>,若没有该文件，可以自己新建一个<code>gitalk.ejs</code>,然后添加如下代码：</p><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string">"https://unpkg.com/gitalk/dist/gitalk.css"</span><span class="token operator">></span><span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"gitalk-container"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span>script src<span class="token operator">=</span><span class="token string">"https://unpkg.com/gitalk/dist/gitalk.min.js"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">"text/javascript"</span><span class="token operator">></span>    <span class="token keyword">var</span> gitalk <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Gitalk</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        clientID<span class="token punctuation">:</span> <span class="token string">'&lt;%= theme.gitalk.clientID %>'</span><span class="token punctuation">,</span>        clientSecret<span class="token punctuation">:</span> <span class="token string">'&lt;%= theme.gitalk.clientSecret %>'</span><span class="token punctuation">,</span>        id<span class="token punctuation">:</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">,</span>        repo<span class="token punctuation">:</span> <span class="token string">'&lt;%= theme.gitalk.repo %>'</span><span class="token punctuation">,</span>        owner<span class="token punctuation">:</span> <span class="token string">'&lt;%= theme.gitalk.owner %>'</span><span class="token punctuation">,</span>        admin<span class="token punctuation">:</span> <span class="token string">'&lt;%= theme.gitalk.admin %>'</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>    gitalk<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token string">'gitalk-container'</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p>然后再按上步操作进行配置即可。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Gitalk </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matery主题的配置</title>
      <link href="/2020/02/19/matery-zhu-ti-de-pei-zhi/"/>
      <url>/2020/02/19/matery-zhu-ti-de-pei-zhi/</url>
      
        <content type="html"><![CDATA[<p>这是一个简介漂亮的主题，基于<code>Material Design</code>的响应式设计，不得不说，主题是真的很漂亮，还集成了很多好用的插件，十分感谢作者<a href="https://github.com/blinkfox/hexo-theme-matery/" target="_blank" rel="noopener">闪烁之狐</a>，下面就一起来配置主题吧！</p><h2 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h2><blockquote><p>主题连接：<a href="https://github.com/blinkfox/hexo-theme-matery/" target="_blank" rel="noopener">hexo-theme-matery</a></p></blockquote><p>在<code>themes</code>文件下使用<code>git clone</code>命令下载</p><pre class=" language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/blinkfox/hexo-theme-matery.git</code></pre><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="切换主题"><a href="#切换主题" class="headerlink" title="切换主题"></a>切换主题</h3><p>修改<code>Hexo</code>根目录下<code>_config.yml</code>的<code>theme</code>的值:<code>theme:hexo-theme-matery</code></p><h3 id="其他配置"><a href="#其他配置" class="headerlink" title="其他配置"></a>其他配置</h3><p>参考<a href="https://github.com/blinkfox/hexo-theme-matery/blob/develop/README_CN.md" target="_blank" rel="noopener">闪烁之狐</a>的详细配置说明文档，介绍得很详细，不过也有地方介绍不够详细，我后面写文章补充。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Matery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-插入图片方法</title>
      <link href="/2020/02/18/hexo-cha-ru-tu-pian-fang-fa/"/>
      <url>/2020/02/18/hexo-cha-ru-tu-pian-fang-fa/</url>
      
        <content type="html"><![CDATA[<p>很久没写博文了，今天把最近课题设计总结了一下，其中有不是图片，但还不知道怎么插入图片，就在网上搜了一下，还好有大佬的总结，跟着做了一遍，然后就行了。<br>下面是插入图片的方法；</p><a id="more"></a><ul><li>改站点配置</li></ul><blockquote><p>打开站点配置文件<code>_config.yml</code></p></blockquote><p>找到 <strong>post_asset_folder:false</strong><br>将<strong>false</strong>改为<strong>true</strong></p><ul><li>在hexo的目录下打开git，并执行<code>npm install hexo-asset-image --save</code></li></ul><p>次语句的目的是下载一个本地上传图片的工具，执行后等待一会儿，命令完毕后会叫你更新升级，照着单引号的语句执行即可。</p><ul><li>接着新建一个文章，执行<code>hexo n "xxxx"</code>生成一个md博文</li></ul><p>打开博客文件，<code>/source/_posts</code>文件夹内除了<code>xxxx.md</code>文件还有一个同名的文件夹,这个文件加上用来存放要插入的图片。</p><ul><li>引入图片</li></ul><p>最后在<code>xxxx.md</code>中想引入图片时，先把图片复制到<code>xxxx</code>这个文件夹中，然后只需要在<code>xxxx.md</code>中按照markdown的格式引入图片：</p><p><code>![你想输入的替代文字](xxxx/图片名.jpg)</code></p><p>写好博文，提交后，就可以看到博文里面的图片了。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo新建博客文章</title>
      <link href="/2020/02/18/hexo-xin-jian-bo-ke-wen-zhang/"/>
      <url>/2020/02/18/hexo-xin-jian-bo-ke-wen-zhang/</url>
      
        <content type="html"><![CDATA[<p>初识Hexo，先来学习怎么创建新文章，怎么添加标签及分类。</p><h2 id="1、创建文章"><a href="#1、创建文章" class="headerlink" title="1、创建文章"></a>1、创建文章</h2><ul><li>a.在hexo根目录下创建一个新文章<pre class=" language-bash"><code class="language-bash">hexo new <span class="token string">"文章名称"</span></code></pre>创建后，会提示你文件路径，一般在  D:\hexo\blog\source_posts\ 下</li><li>b.文章基本设置<pre class=" language-bash"><code class="language-bash"></code></pre></li></ul><hr><p>title: hexo 创建文章、标签、分类<br>date: 2018-10-14 21:09:58<br>toc: true<br>categories: “Hexo”<br>tags:<br>    - hexo<br>    - 文章样式</p><hr><pre><code>## 2、创建标签- a.创建标签页面```bashhexo new page "tags"</code></pre><ul><li>b.基本设置<pre class=" language-bash"><code class="language-bash"></code></pre></li></ul><hr><p>title: 标签<br>tags:<br>    - test<br>    - andriod<br>    - python<br>    - java<br>date: 2018-10-13 23:02:48</p><hr><pre><code>## 3、创建分类- a.创建分类页面```bashhexo new page "categories"</code></pre><ul><li>b.基本设置</li></ul><pre class=" language-bash"><code class="language-bash">---title: 分类date: 2018-10-13 22:51:32comments: <span class="token boolean">false</span>type: <span class="token string">"java"</span>---</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python练习</title>
      <link href="/2020/02/18/python-lian-xi/"/>
      <url>/2020/02/18/python-lian-xi/</url>
      
        <content type="html"><![CDATA[<h3 id="利用turtle库绘制一个五角星"><a href="#利用turtle库绘制一个五角星" class="headerlink" title="利用turtle库绘制一个五角星"></a>利用turtle库绘制一个五角星</h3><blockquote><p>要求：</p></blockquote><ul><li><p>图形的边缘线条为黄色</p></li><li><p>填充为红色</p></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> turtler <span class="token operator">=</span> <span class="token number">100</span> <span class="token comment" spellcheck="true"># 前进距离</span>θ<span class="token number">1</span> <span class="token operator">=</span> <span class="token number">72</span> <span class="token comment" spellcheck="true"># 旋转角度</span>θ<span class="token number">2</span> <span class="token operator">=</span> <span class="token number">144</span>turtle<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">)</span>turtle<span class="token punctuation">.</span>fillcolor<span class="token punctuation">(</span><span class="token string">"red"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 填充色为红色</span>turtle<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#画笔宽度</span>turtle<span class="token punctuation">.</span>pencolor<span class="token punctuation">(</span><span class="token string">"yellow"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 画笔颜色</span>turtle<span class="token punctuation">.</span>begin_fill<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#开始填充</span><span class="token comment" spellcheck="true"># 此时画笔在窗口正中心，需要向左边移动一些距离</span>turtle<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>turtle<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">150</span><span class="token punctuation">)</span>turtle<span class="token punctuation">.</span>pendown<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 绘图</span>    turtle<span class="token punctuation">.</span>fd<span class="token punctuation">(</span>r<span class="token punctuation">)</span>    turtle<span class="token punctuation">.</span>left<span class="token punctuation">(</span>θ<span class="token number">1</span><span class="token punctuation">)</span>    turtle<span class="token punctuation">.</span>fd<span class="token punctuation">(</span>r<span class="token punctuation">)</span>    turtle<span class="token punctuation">.</span>right<span class="token punctuation">(</span>θ<span class="token number">2</span><span class="token punctuation">)</span>turtle<span class="token punctuation">.</span>end_fill<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#填充结束</span>turtle<span class="token punctuation">.</span>hideturtle<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 隐藏turtle箭头</span>turtle<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h3 id="利用turtle库绘制数码管显示本地时间"><a href="#利用turtle库绘制数码管显示本地时间" class="headerlink" title="利用turtle库绘制数码管显示本地时间"></a>利用turtle库绘制数码管显示本地时间</h3><blockquote><p>要求：</p></blockquote><ul><li><p>绘制数码管，显示当前时间（时、分、秒）</p></li><li><p>格式 <strong>18:23:02</strong></p></li></ul><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># coding:utf-8</span><span class="token comment" spellcheck="true"># 用turtle绘制七段数码管，来显示电脑本地时间</span><span class="token comment" spellcheck="true"># 格式如下：</span><span class="token comment" spellcheck="true"># 15:45:51</span><span class="token keyword">import</span> time<span class="token keyword">import</span> turtle <span class="token keyword">as</span> t<span class="token comment" spellcheck="true"># 绘制间隔</span><span class="token keyword">def</span> <span class="token function">drawGap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制单段数码管</span><span class="token keyword">def</span> <span class="token function">drawLine</span><span class="token punctuation">(</span>draw<span class="token punctuation">)</span><span class="token punctuation">:</span>    drawGap<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>draw<span class="token punctuation">)</span><span class="token punctuation">:</span>         t<span class="token punctuation">.</span>pendown<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>         t<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>    drawGap<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>right<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制当前时间</span><span class="token keyword">def</span> <span class="token function">drawDate</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>pencolor<span class="token punctuation">(</span><span class="token string">"red"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> date<span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token string">'='</span><span class="token punctuation">:</span>            t<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">,</span> font<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">"黑体"</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token string">"normal"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            t<span class="token punctuation">.</span>pencolor<span class="token punctuation">(</span><span class="token string">"blue"</span><span class="token punctuation">)</span>            t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>       <span class="token keyword">elif</span> i <span class="token operator">==</span> <span class="token string">'#'</span><span class="token punctuation">:</span>            t<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">,</span> font<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">"黑体"</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token string">"normal"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            t<span class="token punctuation">.</span>pencolor<span class="token punctuation">(</span><span class="token string">"green"</span><span class="token punctuation">)</span>            t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>       <span class="token keyword">else</span><span class="token punctuation">:</span>            drawDigit<span class="token punctuation">(</span>eval<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制数码管</span><span class="token keyword">def</span> <span class="token function">drawDigit</span><span class="token punctuation">(</span>cur_time<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> cur_time <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> cur_time <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> cur_time <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> cur_time <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>left<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> cur_time <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> cur_time <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> cur_time <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>left<span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 主函数</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">275</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>    drawDate<span class="token punctuation">(</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%H=%M#%S'</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>hideturtle<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h3 id="利用jieba库对《水浒传》进行分析"><a href="#利用jieba库对《水浒传》进行分析" class="headerlink" title="利用jieba库对《水浒传》进行分析"></a>利用jieba库对《水浒传》进行分析</h3><blockquote><p>要求：</p></blockquote><ul><li>分析统计词频排名前十的中文词条</li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> jiebatxt <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"水浒传.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>words <span class="token operator">=</span> jieba<span class="token punctuation">.</span>lcut<span class="token punctuation">(</span>txt<span class="token punctuation">)</span>counts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">for</span> word <span class="token keyword">in</span> words<span class="token punctuation">:</span>    <span class="token keyword">if</span> len<span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">continue</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        counts<span class="token punctuation">[</span>word<span class="token punctuation">]</span> <span class="token operator">=</span> counts<span class="token punctuation">.</span>get<span class="token punctuation">(</span>word<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>items <span class="token operator">=</span> list<span class="token punctuation">(</span>counts<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>items<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    word<span class="token punctuation">,</span> count <span class="token operator">=</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"{0:&lt;10}{1:>5}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>word<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">'''对《水浒传》进行词频分析分析结果：宋江 2606两个 1759一个 1431李逵 1141武松 1067只见 928如何 923那里 866哥哥 758说道 746'''</span></code></pre><h3 id="求完数"><a href="#求完数" class="headerlink" title="求完数"></a>求完数</h3><blockquote><p>要求：</p></blockquote><ul><li>计算1000内的所有完数</li></ul><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 求1000以内的所有完数</span><span class="token comment" spellcheck="true"># 完数:一个数所有的因子(除自身以外)的和等于该数，则称为完数</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    sum<span class="token operator">=</span><span class="token number">0</span>    <span class="token keyword">for</span> k <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i<span class="token operator">%</span>k<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>            sum<span class="token operator">+=</span>k<span class="token keyword">if</span> i<span class="token operator">==</span>sum<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></code></pre><h3 id="求-0-100-内的10个随机数"><a href="#求-0-100-内的10个随机数" class="headerlink" title="求[0,100]内的10个随机数"></a>求[0,100]内的10个随机数</h3><blockquote><p>要求：</p></blockquote><ul><li>计算100内的10个随机数</li><li>交换最大值和最小值的位置</li></ul><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 随机产生[0,100]以内的随机数，找到最大值和最小值并交换位置</span><span class="token keyword">import</span> randoma <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a<span class="token punctuation">.</span>append<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"随机产生的10个整数："</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>a_max <span class="token operator">=</span> max<span class="token punctuation">(</span>a<span class="token punctuation">)</span>a_min <span class="token operator">=</span> min<span class="token punctuation">(</span>a<span class="token punctuation">)</span>a<span class="token punctuation">[</span>a<span class="token punctuation">.</span>index<span class="token punctuation">(</span>min<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> a_maxa<span class="token punctuation">[</span>a<span class="token punctuation">.</span>index<span class="token punctuation">(</span>max<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> a_min<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"最大值："</span><span class="token punctuation">,</span> a_max<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"最小值："</span><span class="token punctuation">,</span> a_min<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"交换最大最小值位置："</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
