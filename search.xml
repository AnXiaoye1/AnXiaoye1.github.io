<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo-插入图片方法</title>
      <link href="/2020/02/18/hexo-cha-ru-tu-pian-fang-fa/"/>
      <url>/2020/02/18/hexo-cha-ru-tu-pian-fang-fa/</url>
      
        <content type="html"><![CDATA[<p>很久没写博文了，今天把最近课题设计总结了一下，其中有不是图片，但还不知道怎么插入图片，就在网上搜了一下，还好有大佬的总结，跟着做了一遍，然后就行了。<br>下面是插入图片的方法；</p><a id="more"></a><ul><li>改站点配置</li></ul><blockquote><p>打开站点配置文件<code>_config.yml</code></p></blockquote><p>找到 <strong>post_asset_folder:false</strong><br>将<strong>false</strong>改为<strong>true</strong></p><ul><li>在hexo的目录下打开git，并执行<code>npm install hexo-asset-image --save</code></li></ul><p>次语句的目的是下载一个本地上传图片的工具，执行后等待一会儿，命令完毕后会叫你更新升级，照着单引号的语句执行即可。</p><ul><li>接着新建一个文章，执行<code>hexo n "xxxx"</code>生成一个md博文</li></ul><p>打开博客文件，<code>/source/_posts</code>文件夹内除了<code>xxxx.md</code>文件还有一个同名的文件夹,这个文件加上用来存放要插入的图片。</p><ul><li>引入图片</li></ul><p>最后在<code>xxxx.md</code>中想引入图片时，先把图片复制到<code>xxxx</code>这个文件夹中，然后只需要在<code>xxxx.md</code>中按照markdown的格式引入图片：</p><p><code>![你想输入的替代文字](xxxx/图片名.jpg)</code></p><p>写好博文，提交后，就可以看到博文里面的图片了。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo基础 </tag>
            
            <tag> 博文插图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo新建博客文章</title>
      <link href="/2020/02/18/hello-world/"/>
      <url>/2020/02/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>初识Hexo，先来学习怎么创建新文章，怎么添加标签及分类。</p><h2 id="创建文章"><a href="#创建文章" class="headerlink" title="创建文章"></a>创建文章</h2><ul><li>a.在hexo根目录下创建一个新文章<pre class=" language-bash"><code class="language-bash">hexo new <span class="token string">"文章名称"</span></code></pre>创建后，会提示你文件路径，一般在  D:\hexo\blog\source_posts\ 下</li><li>b.文章基本设置<pre><code></code></pre></li></ul><hr><p>title: hexo 创建文章、标签、分类<br>date: 2018-10-14 21:09:58<br>toc: true<br>categories: “Hexo”<br>tags:<br>    - hexo<br>    - 文章样式</p><hr><pre><code>## 创建标签- a.创建标签页面```bashhexo new page "tags"```- b.基本设置</code></pre><hr><p>title: 标签<br>tags:<br>    - test<br>    - andriod<br>    - python<br>    - java<br>date: 2018-10-13 23:02:48</p><hr><pre><code>## 创建分类- a.创建分类页面```bashhexo new page "categories"```- b.基本设置</code></pre><hr><p>title: 分类<br>date: 2018-10-13 22:51:32<br>comments: false<br>type: “java”</p><hr><pre><code></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo基础 </tag>
            
            <tag> hexo发布文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python练习</title>
      <link href="/2020/02/18/python-lian-xi/"/>
      <url>/2020/02/18/python-lian-xi/</url>
      
        <content type="html"><![CDATA[<h3 id="利用turtle库绘制一个五角星"><a href="#利用turtle库绘制一个五角星" class="headerlink" title="利用turtle库绘制一个五角星"></a>利用turtle库绘制一个五角星</h3><blockquote><p>要求：</p></blockquote><ul><li><p>图形的边缘线条为黄色</p></li><li><p>填充为红色</p></li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> turtler <span class="token operator">=</span> <span class="token number">100</span> <span class="token comment" spellcheck="true"># 前进距离</span>θ<span class="token number">1</span> <span class="token operator">=</span> <span class="token number">72</span> <span class="token comment" spellcheck="true"># 旋转角度</span>θ<span class="token number">2</span> <span class="token operator">=</span> <span class="token number">144</span>turtle<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">,</span><span class="token number">600</span><span class="token punctuation">)</span>turtle<span class="token punctuation">.</span>fillcolor<span class="token punctuation">(</span><span class="token string">"red"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 填充色为红色</span>turtle<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#画笔宽度</span>turtle<span class="token punctuation">.</span>pencolor<span class="token punctuation">(</span><span class="token string">"yellow"</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 画笔颜色</span>turtle<span class="token punctuation">.</span>begin_fill<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#开始填充</span><span class="token comment" spellcheck="true"># 此时画笔在窗口正中心，需要向左边移动一些距离</span>turtle<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>turtle<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">150</span><span class="token punctuation">)</span>turtle<span class="token punctuation">.</span>pendown<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment" spellcheck="true"># 绘图</span>    turtle<span class="token punctuation">.</span>fd<span class="token punctuation">(</span>r<span class="token punctuation">)</span>    turtle<span class="token punctuation">.</span>left<span class="token punctuation">(</span>θ<span class="token number">1</span><span class="token punctuation">)</span>    turtle<span class="token punctuation">.</span>fd<span class="token punctuation">(</span>r<span class="token punctuation">)</span>    turtle<span class="token punctuation">.</span>right<span class="token punctuation">(</span>θ<span class="token number">2</span><span class="token punctuation">)</span>turtle<span class="token punctuation">.</span>end_fill<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">#填充结束</span>turtle<span class="token punctuation">.</span>hideturtle<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true"># 隐藏turtle箭头</span>turtle<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h3 id="利用turtle库绘制数码管显示本地时间"><a href="#利用turtle库绘制数码管显示本地时间" class="headerlink" title="利用turtle库绘制数码管显示本地时间"></a>利用turtle库绘制数码管显示本地时间</h3><blockquote><p>要求：</p></blockquote><ul><li><p>绘制数码管，显示当前时间（时、分、秒）</p></li><li><p>格式 <strong>18:23:02</strong></p></li></ul><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># coding:utf-8</span><span class="token comment" spellcheck="true"># 用turtle绘制七段数码管，来显示电脑本地时间</span><span class="token comment" spellcheck="true"># 格式如下：</span><span class="token comment" spellcheck="true"># 15:45:51</span><span class="token keyword">import</span> time<span class="token keyword">import</span> turtle <span class="token keyword">as</span> t<span class="token comment" spellcheck="true"># 绘制间隔</span><span class="token keyword">def</span> <span class="token function">drawGap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制单段数码管</span><span class="token keyword">def</span> <span class="token function">drawLine</span><span class="token punctuation">(</span>draw<span class="token punctuation">)</span><span class="token punctuation">:</span>    drawGap<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>draw<span class="token punctuation">)</span><span class="token punctuation">:</span>         t<span class="token punctuation">.</span>pendown<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>         t<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>    drawGap<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>right<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制当前时间</span><span class="token keyword">def</span> <span class="token function">drawDate</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>pencolor<span class="token punctuation">(</span><span class="token string">"red"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> date<span class="token punctuation">:</span>        <span class="token keyword">if</span> i <span class="token operator">==</span> <span class="token string">'='</span><span class="token punctuation">:</span>            t<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">,</span> font<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">"黑体"</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token string">"normal"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            t<span class="token punctuation">.</span>pencolor<span class="token punctuation">(</span><span class="token string">"blue"</span><span class="token punctuation">)</span>            t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>       <span class="token keyword">elif</span> i <span class="token operator">==</span> <span class="token string">'#'</span><span class="token punctuation">:</span>            t<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">,</span> font<span class="token operator">=</span><span class="token punctuation">(</span><span class="token string">"黑体"</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token string">"normal"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            t<span class="token punctuation">.</span>pencolor<span class="token punctuation">(</span><span class="token string">"green"</span><span class="token punctuation">)</span>            t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span>       <span class="token keyword">else</span><span class="token punctuation">:</span>            drawDigit<span class="token punctuation">(</span>eval<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 绘制数码管</span><span class="token keyword">def</span> <span class="token function">drawDigit</span><span class="token punctuation">(</span>cur_time<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> cur_time <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> cur_time <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> cur_time <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> cur_time <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>left<span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> cur_time <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> cur_time <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> cur_time <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        drawLine<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>left<span class="token punctuation">(</span><span class="token number">180</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true"># 主函数</span><span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    t<span class="token punctuation">.</span>setup<span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>penup<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>fd<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">275</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>pensize<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>    drawDate<span class="token punctuation">(</span>time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">'%H=%M#%S'</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>hideturtle<span class="token punctuation">(</span><span class="token punctuation">)</span>    t<span class="token punctuation">.</span>done<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><h3 id="利用jieba库对《水浒传》进行分析"><a href="#利用jieba库对《水浒传》进行分析" class="headerlink" title="利用jieba库对《水浒传》进行分析"></a>利用jieba库对《水浒传》进行分析</h3><blockquote><p>要求：</p></blockquote><ul><li>分析统计词频排名前十的中文词条</li></ul><pre class=" language-python"><code class="language-python"><span class="token keyword">import</span> jiebatxt <span class="token operator">=</span> open<span class="token punctuation">(</span><span class="token string">"水浒传.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>words <span class="token operator">=</span> jieba<span class="token punctuation">.</span>lcut<span class="token punctuation">(</span>txt<span class="token punctuation">)</span>counts <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token keyword">for</span> word <span class="token keyword">in</span> words<span class="token punctuation">:</span>    <span class="token keyword">if</span> len<span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>        <span class="token keyword">continue</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        counts<span class="token punctuation">[</span>word<span class="token punctuation">]</span> <span class="token operator">=</span> counts<span class="token punctuation">.</span>get<span class="token punctuation">(</span>word<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>items <span class="token operator">=</span> list<span class="token punctuation">(</span>counts<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>items<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> x<span class="token punctuation">:</span> x<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    word<span class="token punctuation">,</span> count <span class="token operator">=</span> items<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"{0:&lt;10}{1:>5}"</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>word<span class="token punctuation">,</span> count<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token triple-quoted-string string">'''对《水浒传》进行词频分析分析结果：宋江 2606两个 1759一个 1431李逵 1141武松 1067只见 928如何 923那里 866哥哥 758说道 746'''</span></code></pre><h3 id="求完数"><a href="#求完数" class="headerlink" title="求完数"></a>求完数</h3><blockquote><p>要求：</p></blockquote><ul><li>计算1000内的所有完数</li></ul><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 求1000以内的所有完数</span><span class="token comment" spellcheck="true"># 完数:一个数所有的因子(除自身以外)的和等于该数，则称为完数</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    sum<span class="token operator">=</span><span class="token number">0</span>    <span class="token keyword">for</span> k <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i<span class="token operator">%</span>k<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>            sum<span class="token operator">+=</span>k<span class="token keyword">if</span> i<span class="token operator">==</span>sum<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span></code></pre><h3 id="求-0-100-内的10个随机数"><a href="#求-0-100-内的10个随机数" class="headerlink" title="求[0,100]内的10个随机数"></a>求[0,100]内的10个随机数</h3><blockquote><p>要求：</p></blockquote><ul><li>计算100内的10个随机数</li><li>交换最大值和最小值的位置</li></ul><pre class=" language-python"><code class="language-python"><span class="token comment" spellcheck="true"># 随机产生[0,100]以内的随机数，找到最大值和最小值并交换位置</span><span class="token keyword">import</span> randoma <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> range<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a<span class="token punctuation">.</span>append<span class="token punctuation">(</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"随机产生的10个整数："</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>a_max <span class="token operator">=</span> max<span class="token punctuation">(</span>a<span class="token punctuation">)</span>a_min <span class="token operator">=</span> min<span class="token punctuation">(</span>a<span class="token punctuation">)</span>a<span class="token punctuation">[</span>a<span class="token punctuation">.</span>index<span class="token punctuation">(</span>min<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> a_maxa<span class="token punctuation">[</span>a<span class="token punctuation">.</span>index<span class="token punctuation">(</span>max<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> a_min<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"最大值："</span><span class="token punctuation">,</span> a_max<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"最小值："</span><span class="token punctuation">,</span> a_min<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"交换最大最小值位置："</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python基础 </tag>
            
            <tag> turtle库 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
